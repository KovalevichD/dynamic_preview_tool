{"version":3,"sources":["components/FooterSection/FooterSection.module.css","components/StartPage/StartPage.js","assets/logo_horizontal.svg","components/FooterSection/FooterSection.js","components/HeaderSection/NavbarSection/NavbarSection.js","redux/selectors/dynamicDataSelectors.js","redux/selectors/uploadCreativesSelectors.js","components/HeaderSection/NavbarSection/NavbarSectionContainer.js","components/HeaderSection/HeaderSection.js","api/api.js","redux/reducers/uploadCreativesReducer.js","components/UploadCreatives/UploadCreativesProcess/DragField/DragField.js","components/UploadCreatives/UploadCreativesProcess/ListOfCreatives/DeleteCreative/DeleteCreative.js","components/UploadCreatives/UploadCreativesProcess/ListOfCreatives/ListOfCreatives.js","components/UploadCreatives/UploadCreativesProcess/UploadedCreativesList/UploadedCreativesList.js","components/UploadCreatives/UploadCreativesProcess/CreativesToUploadList/CreativesToUploadList.js","components/UploadCreatives/UploadCreativesProcess/UploadCreativesProcess.js","redux/reducers/createAllVariationsReducer.js","hoc/WithFetchingHoc.js","components/UploadCreatives/UploadCreativesProcess/UploadCreativesProcessContainer.js","components/UploadCreatives/UploadResult/UploadResult.js","components/UploadCreatives/UploadCreatives.js","components/GetStaticVariations/GetStaticVariationsProcess/DownloadArchive/DownloadArchive.js","components/GetStaticVariations/GetStaticVariationsProcess/GetStaticVariationsProcess.js","hoc/WithNoDataRedirect.js","redux/selectors/allVariationsSelectors.js","components/GetStaticVariations/GetStaticVariationsProcess/GetStaticVariationsProcessContainer.js","components/GetStaticVariations/GetStaticVariations.js","components/UploadGS/ShowSheetsData/SelectType/SelectType.js","components/UploadGS/ShowSheetsData/TableHeader/TableHeader.js","components/UploadGS/ShowSheetsData/TableFooter/TableFooter.js","utils/getRandomRowIndexes.js","utils/processValueBasedOnType.js","utils/createAllSnippetVariations.js","utils/createSnippets.js","components/UploadGS/ShowSheetsData/ShowSheetsData.js","redux/reducers/dynamicDataReducer.js","components/UploadGS/ShowSheetsData/ShowSheetsDataContainer.js","components/UploadGS/GetSheetsInfo/ChangeSpreadsheetLink/ChangeSpreadsheetLink.js","components/UploadGS/GetSheetsInfo/ProvideSpreadsheetLink/ProvideSpreadsheetLink.js","components/UploadGS/GetSheetsInfo/GetSheetInfo.js","redux/reducers/uploadGSReducer.js","redux/selectors/uploadGSSelectors.js","components/UploadGS/GetSheetsInfo/GetSheetInfoContainer.js","components/UploadGS/ChooseSheet/ChooseSheet.js","components/UploadGS/ChooseSheet/ChooseSheetContainer.js","components/UploadGS/Progress/Progress.js","components/UploadGS/Progress/ProgressContainer.js","components/UploadGS/UploadResult/UploadResult.js","components/UploadGS/UploadGS.js","components/UploadGS/UploadGSContainer.js","App.js","reportWebVitals.js","redux/store.js","index.js","components/UploadGS/Progress/Progress.module.css"],"names":["module","exports","Title","Typography","StartPage","level","style","textAlign","Footer","Layout","FooterSection","className","styles","footer","logo","src","alt","authorLink","href","SubMenu","Menu","NavbarSection","props","backgroundColor","mode","theme","Item","icon","UploadOutlined","to","disabled","isCreativesReady","BarChartOutlined","title","isDataReady","SaveOutlined","FundViewOutlined","DatabaseOutlined","getData","state","dynamicData","data","getListOfTypes","listOfTypes","getSheetDataLength","length","getIsDataReady","getSnippets","snippets","getFilesInFolders","uploadCreatives","filesInFolders","getFilesToUpload","filesToUpload","getAmountOfFilesToLoad","amountOfFilesToLoad","getIsUploadCreativesFetching","isFetching","getUploadedFiles","uploadedFiles","getIsCreativesReady","ShowSheetsDataContainer","connect","Header","HeaderSection","height","lineHeight","maxWidth","margin","NavbarSectionContainer","instanceSpreadsheet","axios","create","headers","spreadsheetAPI","url","post","id","listOfSheets","uploadCreativesAPI","files","delete","createAllVariationsAPI","get","responseType","ADD_FILE_TO_LOAD","REMOVE_FILES_TO_LOAD","RESET_FILES","SET_AMOUNT_OF_FILES_TO_LOAD","TOGGLE_IS_FETCHING","ADD_FILES_UPLOADED_TO_SERVER","TOGGLE_IS_CREATIVES_READY","initialState","resetFiles","type","toggleIsFetching","uploadCreativesReducer","action","isReady","splitFilePath","file","webkitRelativePath","split","folder","addFileNewObj","hasOwnProperty","push","name","removeFolderNewObj","folderName","filesToUploadCloneArr","filesToUploadNewArr","filter","elem","indexOf","amountOfFiles","Dragger","Upload","DragField","accept","showUploadList","customRequest","info","addFileToLoad","message","error","onChange","fileList","setAmountOfFilesToLoad","multiple","directory","InboxOutlined","ListOfCreatives","DeleteTwoTone","twoToneColor","fontSize","onClick","e","removeFilesToLoad","currentTarget","stopPropagation","preventDefault","Panel","Collapse","list","collapsePanels","Object","entries","fileArr","collapsePanel","header","FolderTwoTone","marginRight","position","bottom","fontWeight","extra","keys","DeleteCreative","size","marginLeft","dataSource","renderItem","item","FileTwoTone","ghost","accordion","UploadedCreativesList","Modal","confirm","ExclamationCircleOutlined","content","okText","cancelText","onOk","a","deleteFiles","clearAllVariationsDirectory","notification","success","description","placement","CreativesToUploadList","history","useHistory","uploadFiles","loading","UploadCreativesProcess","TOGGLE_IS_FETCHING_ALL_VARIATIONS","TOGGLE_IS_VARIATIONS_CREATED","SET_FILE_TO_DOWNLOAD_NAME","RESET_DATA_ALL_VARIATIONS","isVariationsCreated","fileToDownloadName","createAllVariationsReducer","WithFetchingHoc","Component","spinning","tip","mapDispatchToProps","amount","dispatch","formData","FormData","i","append","res","compose","UploadResult","status","subTitle","DownloadOutlined","HomeOutlined","UploadCreatives","exact","path","render","UploadCreativesProcessContainer","Text","DownloadArchive","download","fileDownload","strong","GetStaticVariationsProcess","numberOfSizes","creatives","numberOfAllVariations","numberOfCreatives","snippetsObj","fromEntries","createAllVariations","direction","WithNoDataRedirect","isNoData","getIsFetchingAllVariations","getIsVariationsCreated","getFileToDownloadName","fileName","GetStaticVariations","GetStaticVariationsProcessContainer","Option","Select","SelectType","options","map","listItem","value","defaultValue","defaultTypes","rowIndex","width","typeObj","elementIndex","sheetIndex","typeValue","setType","Paragraph","TableHeader","editable","tooltip","updateSheetName","index","elementName","display","min","max","dataLength","quantity","setQuantity","getRandomRowIndexes","initialIndex","elementLastIndex","randomRowIndexes","indexesMap","Set","add","randomIndex","Math","ceil","floor","random","has","processValueBasedOnType","objValue","objType","toLowerCase","Error","Url","splitRawDateTime","splitDate","isoFormatDate","substring","RawValue","UtcValue","Date","parse","createAllSnippetVariations","array","allVariants","Map","recursivePass","objInit","string","j","cloneString","cloneObj","JSON","stringify","uniqueString","set","createSnippets","forEach","element","elementTitles","types","selectedTypes","elementSnippets","devDynamicContent","elementObj","k","ShowSheetsData","useState","dynamicId","setDynamicId","dynamicIdInputRef","useRef","sheetData","columnsArr","rowsArr","obj","sheetName","key","columns","dataIndex","text","record","tables","sheet","bordered","updateElementName","TableFooter","pagination","marginBottom","marginTop","ref","target","allowClear","placeholder","setDataReadyFlag","codeSnippetsArr","addCodeSnippets","ADD_CODE_SNIPPETS","SET_DATA_READY_FLAG","ADD_DATA","SET_TYPE","SET_QUANTITY","UPDATE_ELEMENT_NAME","RESET_DATA_DYN_DATA","SET_DYNAMIC_ID","dynamicDataReducer","processedData","dataObj","Array","fill","initSelectedTypes","typeInfo","slice","newElementName","dataMap","flag","flagBoolean","typeInfoObj","number","Link","ChangeSpreadsheetLink","CheckSquareOutlined","color","spreadsheetUrl","spreadsheetName","resetData","resetGsData","GetSheetInfo","getSheetList","urlInputText","updateUrlInputText","isDisable","setIsDisable","useEffect","ProvideSpreadsheetLink","ADD_LIST_OF_SHEETS_TO_UPLOAD","UPDATE_URL_INPUT_TEXT","TOGGLE_IS_FETCHING_UPLOAD_GS","RESET_DATA","SET_SHEET_INFO","spreadsheetId","totalListOfSheets","listOfSheetsToUpload","uploadGSReducer","listToUpload","newText","getTotalListOfSheetsLength","uploadGS","getTotalListOfSheets","getUrlInputText","getIsUploadGSFetching","getSpreadsheetName","getSpreadsheetUrl","getListOfSheetsToUpload","getSpreadsheetId","textStr","spreadsheetInfo","infoObj","ChooseSheet","isDisabled","toggleIsDisabled","totalSheetsList","sheetsListToUpload","optionsList","getSheetsData","addListOfSheetsToUpload","arrList","spreadsheetData","sheetsData","Step","Steps","Progress","step_1Disabled","totalListOfSheetsLength","step_2Disabled","sheetDataLength","current","match","params","step","responsive","activeClassName","selected","AreaChartOutlined","HddFilled","SettingFilled","WithRouterProgress","withRouter","EditOutlined","UploadGS","paddingTop","ProgressContainer","GetSheetInfoContainer","ChooseSheetContainer","Content","App","minHeight","UploadGSContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f09bd10.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"FooterSection_footer__23cqz\",\"logo\":\"FooterSection_logo__3UW7w\",\"authorLink\":\"FooterSection_authorLink__Cdw7Q\"};","import React from 'react';\nimport {Typography} from 'antd';\n\nconst {Title} = Typography;\n\nconst StartPage = () => {\n\n    return (\n        <>\n            <Title level={1} style={{textAlign: 'center'}}>Getting Started</Title>\n            <Title level={2} style={{textAlign: 'center'}}>Getting Started with GS</Title>\n            <Title level={3} style={{textAlign: 'center'}}>Getting Started with CSV</Title>\n            <Title level={4} style={{textAlign: 'center'}}>Getting Started with JSON</Title>\n        </>\n    );\n}\n\nexport default StartPage;","export default __webpack_public_path__ + \"static/media/logo_horizontal.694337ec.svg\";","import React from 'react';\nimport {Layout} from 'antd';\nimport styles from './FooterSection.module.css';\nimport logo from '../../assets/logo_horizontal.svg';\n\nconst {Footer} = Layout;\n\nconst FooterSection = () => {\n    return (\n        <Footer className={styles.footer}>\n            <img className={styles.logo} src={logo} alt=\"Logo\" />\n            <div>Copyright © 2021 The One Stone Inc.</div>\n            <div>Website designed and coded by <a className={styles.authorLink}\n                                                  href={'https://www.linkedin.com/in/dmitry-kovalevich/'}>Dmitry Kovalevich\n            </a>\n            </div>\n        </Footer>\n    );\n}\n\nexport default FooterSection;","import React from 'react';\nimport {Menu} from 'antd';\nimport {\n    BarChartOutlined,\n    SaveOutlined,\n    FundViewOutlined,\n    DatabaseOutlined,\n    UploadOutlined\n} from '@ant-design/icons';\nimport {NavLink} from \"react-router-dom\";\n\nconst {SubMenu} = Menu;\n\n\nconst NavbarSection = (props) => {\n    return (\n        <Menu style={{backgroundColor: 'none'}} mode=\"horizontal\" theme=\"dark\">\n            <Menu.Item key=\"2\" icon={<UploadOutlined/>}>\n                <NavLink to=\"/uploadCreatives/\">LOAD YOUR CREATIVES</NavLink>\n            </Menu.Item>\n            <SubMenu key=\"sub1\" disabled={!props.isCreativesReady} icon={<BarChartOutlined/>} title=\"CREATE DC\">\n            {/*<SubMenu key=\"sub1\" icon={<BarChartOutlined/>} title=\"CREATE DC\">*/}\n                <Menu.Item key=\"3\"><NavLink to=\"/uploadGs/step_0\">Upload Google Spreadsheets</NavLink></Menu.Item>\n                <Menu.Item key=\"4\">Upload CSV</Menu.Item>\n                <Menu.Item key=\"5\">Upload .json File</Menu.Item>\n            </SubMenu>\n            {/*<SubMenu key=\"sub2\" disabled={ !props.isDataReady || !props.isCreativesReady} icon={<SaveOutlined/>} title=\"GET ALL STATIC VARIATIONS\">*/}\n            {/*    <Menu.Item key=\"6\">Get all versions</Menu.Item>*/}\n            {/*</SubMenu>*/}\n            <Menu.Item key=\"6\"\n                       disabled={!props.isDataReady || !props.isCreativesReady}\n                       icon={<SaveOutlined/>}>\n            {/*<Menu.Item key=\"6\" icon={<SaveOutlined/>}>*/}\n                <NavLink to=\"/getStaticVariations/\">GET ALL STATIC VARIATIONS</NavLink>\n            </Menu.Item>\n            <SubMenu key=\"sub3\" disabled={!props.isDataReady || !props.isCreativesReady} icon={<FundViewOutlined/>} title=\"PREVIEW\">\n                <Menu.Item key=\"7\">option9</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub4\" disabled={!props.isDataReady} icon={<DatabaseOutlined/>} title=\"DATA\">\n                <Menu.Item key=\"8\">Get JSON File</Menu.Item>\n                <Menu.Item key=\"9\">Edit Data</Menu.Item>\n                <Menu.Item key=\"10\">Reset Data</Menu.Item>\n            </SubMenu>\n        </Menu>\n    );\n}\n\nexport default NavbarSection;","export const getData = state => state.dynamicData.data;\nexport const getListOfTypes = state => state.dynamicData.listOfTypes;\nexport const getSheetDataLength = state => state.dynamicData.data.length;\nexport const getIsDataReady = state => state.dynamicData.isDataReady;\nexport const getSnippets = state => state.dynamicData.snippets;\n","export const getFilesInFolders = state => state.uploadCreatives.filesInFolders;\nexport const getFilesToUpload = state => state.uploadCreatives.filesToUpload;\nexport const getAmountOfFilesToLoad = state => state.uploadCreatives.amountOfFilesToLoad;\nexport const getIsUploadCreativesFetching = state => state.uploadCreatives.isFetching;\nexport const getUploadedFiles = state => state.uploadCreatives.uploadedFiles;\nexport const getIsCreativesReady = state => state.uploadCreatives.isCreativesReady;\n","import {connect} from \"react-redux\";\nimport NavbarSection from \"./NavbarSection\";\nimport {getIsDataReady} from \"../../../redux/selectors/dynamicDataSelectors\";\nimport {getIsCreativesReady} from \"../../../redux/selectors/uploadCreativesSelectors\";\n\nconst mapStateToProps = (state) => {\n    return {\n        isDataReady: getIsDataReady(state),\n        isCreativesReady: getIsCreativesReady(state)\n    }\n}\n\n\nconst ShowSheetsDataContainer = connect(mapStateToProps, null)(NavbarSection)\n\nexport default ShowSheetsDataContainer;","import React from 'react';\nimport {Layout} from 'antd';\nimport NavbarSectionContainer from \"./NavbarSection/NavbarSectionContainer\";\nimport {NavLink} from \"react-router-dom\";\n\nconst {Header} = Layout;\n\nconst HeaderSection = (props) => {\n    return (\n        <Header style={{height: '50px', lineHeight: '50px'}}>\n            <div style={{maxWidth: '990px', margin: '0 auto', height: '50px'}}>\n                <NavLink to=\"/\">\n                    <div className=\"logo\"/>\n                </NavLink>\n                <NavbarSectionContainer/>\n            </div>\n        </Header>\n    );\n}\n\nexport default HeaderSection;","import axios from 'axios';\n\nconst instanceSpreadsheet = axios.create({\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\nexport const spreadsheetAPI = {\n    getSheetList(url) {\n        return instanceSpreadsheet.post('/uploadGS/sheetInfo', {url})\n    },\n    getSheetsData(id, listOfSheets) {\n        return instanceSpreadsheet.post('/uploadGS/sheetData', {id, listOfSheets})\n    }\n};\n\nexport const uploadCreativesAPI = {\n    uploadFiles(files) {\n        return axios.post('/uploadCreatives/upload', files, {headers: {'Content-Type': 'multipart/form-data'}})\n    },\n    deleteFiles() {\n        return axios.delete('/uploadCreatives/delete')\n    }\n};\n\nexport const createAllVariationsAPI = {\n    createVariations(snippets) {\n        return axios.post('/createVariations/create', {snippets}, {headers: {'Content-Type': 'application/json'}})\n    },\n    downloadArchive() {\n        return axios.get('/createVariations/download', {responseType: 'blob'})\n    },\n    clearDirectory() {\n        return axios.delete('/createVariations/delete')\n    }\n};\n\n","import {uploadCreativesAPI} from \"../../api/api\";\n\nconst ADD_FILE_TO_LOAD = 'automation-toolkit/uploadCreatives/ADD_FILE_TO_LOAD';\nconst REMOVE_FILES_TO_LOAD = 'automation-toolkit/uploadCreatives/REMOVE_FILES_TO_LOAD';\nconst RESET_FILES = 'automation-toolkit/uploadCreatives/RESET_FILES';\nconst SET_AMOUNT_OF_FILES_TO_LOAD = 'automation-toolkit/uploadCreatives/SET_AMOUNT_OF_FILES_TO_LOAD';\nconst TOGGLE_IS_FETCHING = 'automation-toolkit/uploadCreatives/TOGGLE_IS_FETCHING';\nconst ADD_FILES_UPLOADED_TO_SERVER = 'automation-toolkit/uploadCreatives/ADD_FILES_UPLOADED_TO_SERVER';\nconst TOGGLE_IS_CREATIVES_READY = 'automation-toolkit/uploadCreatives/TOGGLE_IS_CREATIVES_READY';\n\nconst initialState = {\n    filesInFolders: {},\n    filesToUpload: [],\n    uploadedFiles: {},\n    amountOfFilesToLoad: null,\n    isFetching: false,\n    isCreativesReady: false\n}\n\nconst uploadCreativesReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case RESET_FILES:\n            return initialState;\n        case TOGGLE_IS_CREATIVES_READY:\n            return {\n                ...state,\n                isCreativesReady: action.isReady\n            }\n        case ADD_FILES_UPLOADED_TO_SERVER:\n            return {\n                ...state,\n                uploadedFiles: action.uploadedFiles\n            }\n        case ADD_FILE_TO_LOAD:\n            const splitFilePath = action.file.webkitRelativePath.split('/');\n            const folder = splitFilePath[splitFilePath.length - 2];\n\n            const addFileNewObj = {...state.filesInFolders};\n\n            addFileNewObj.hasOwnProperty(folder)\n                ? addFileNewObj[folder].push(action.file.name)\n                : addFileNewObj[folder] = [action.file.name];\n\n            return {\n                ...state,\n                filesInFolders: addFileNewObj,\n                filesToUpload: [...state.filesToUpload, action.file]\n            }\n        case REMOVE_FILES_TO_LOAD:\n            const removeFolderNewObj = {...state.filesInFolders};\n\n            delete removeFolderNewObj[action.folderName];\n\n            const filesToUploadCloneArr = state.filesToUpload;\n\n            const filesToUploadNewArr = filesToUploadCloneArr.filter(elem => {\n                return elem.webkitRelativePath.indexOf(action.folderName) === -1\n            })\n\n            let amountOfFiles = filesToUploadNewArr.length !== 0 ? filesToUploadNewArr.length : null;\n\n            return {\n                ...state,\n                filesInFolders: removeFolderNewObj,\n                filesToUpload: filesToUploadNewArr,\n                amountOfFilesToLoad: amountOfFiles\n            }\n        case SET_AMOUNT_OF_FILES_TO_LOAD:\n            return {\n                ...state,\n                amountOfFilesToLoad: action.amountOfFiles\n            }\n        case TOGGLE_IS_FETCHING:\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        default:\n            return state\n    }\n}\nexport const addFileToLoad = (file) => ({type: ADD_FILE_TO_LOAD, file: file});\nexport const removeFilesToLoad = (folder) => ({type: REMOVE_FILES_TO_LOAD, folderName: folder});\nexport const resetFiles = () => ({type: RESET_FILES});\nexport const setAmountOfFilesToLoad = (amount) => ({type: SET_AMOUNT_OF_FILES_TO_LOAD, amountOfFiles: amount});\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching: isFetching});\nexport const toggleIsCreativesReady = (isReady) => ({type: TOGGLE_IS_CREATIVES_READY, isReady: isReady});\nexport const addFilesUploadedToServer = (uploadedFiles) => ({\n    type: ADD_FILES_UPLOADED_TO_SERVER,\n    uploadedFiles: uploadedFiles\n});\n\nexport const uploadFiles = (filesToUpload) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n\n        const formData = new FormData();\n\n        for (let i = 0; i < filesToUpload.length; i++) {\n            formData.append(\"files\", filesToUpload[i]);\n            formData.append(\"webkitRelativePath\", filesToUpload[i].webkitRelativePath);\n        }\n\n        const res = await uploadCreativesAPI.uploadFiles(formData);\n\n        // dispatch(toggleIsFetching(false));\n        dispatch(resetFiles());\n        dispatch(addFilesUploadedToServer(res.data.uploadedFiles));\n        dispatch(toggleIsCreativesReady(true));\n    }\n}\n\nexport const deleteFiles = () => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n\n        await uploadCreativesAPI.deleteFiles();\n\n        dispatch(resetFiles());\n    }\n}\n\nexport default uploadCreativesReducer;","import React from 'react';\nimport {Upload, message, Typography} from 'antd';\nimport {InboxOutlined} from '@ant-design/icons';\n\nconst {Dragger} = Upload;\nconst {Title} = Typography;\n\nconst DragField = (props) => {\n\n    const customRequest = (info) => {\n        info.file.webkitRelativePath !== info.file.name\n            ? props.addFileToLoad(info.file)\n            : message.error(`${info.file.name} file upload failed. Allowed only entire folder.`);\n    }\n\n    const onChange = (info) => {\n        info.file === info.fileList[info.fileList.length - 1] && props.setAmountOfFilesToLoad(info.fileList.length)\n    }\n\n    return (\n        <>\n            <Title level={4} style={{textAlign: 'left', margin: '50px 0 0 40px'}}>\n                Get started with the app by uploading your creatives\n            </Title>\n            <Dragger name='file'\n                     style={{margin: '40px auto', maxWidth: '90%'}}\n                     accept='image/*,.css,.js,.html,.woff2,.woff,.mp4,.ogv,.webp,.zip'\n                     showUploadList={false}\n                     customRequest={customRequest}\n                     onChange={onChange}\n                     multiple={true}\n                     directory={true}\n            >\n                <p className=\"ant-upload-drag-icon\">\n                    <InboxOutlined/>\n                </p>\n                <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                <p className=\"ant-upload-hint\">\n                    Support for a single or bulk upload. Strictly prohibit from uploading company data or other\n                    band files\n                </p>\n            </Dragger>\n        </>\n    );\n}\n\nexport default DragField;","import React from 'react';\nimport {DeleteTwoTone} from '@ant-design/icons';\n\nconst ListOfCreatives = (props) => {\n    const onClick = (e) => {\n        props.removeFilesToLoad(e.currentTarget.id)\n\n        e.stopPropagation();\n        e.preventDefault();\n    }\n\n    return <DeleteTwoTone id={props.folder} twoToneColor='#f5222d'\n                          style={{fontSize: '23px'}}\n                          onClick={onClick}/>\n}\n\nexport default ListOfCreatives;","import React from 'react';\nimport {Collapse, List} from 'antd';\nimport {FileTwoTone, FolderTwoTone} from '@ant-design/icons';\nimport DeleteCreative from \"./DeleteCreative/DeleteCreative\";\n\nconst {Panel} = Collapse;\n\nconst ListOfCreatives = (props) => {\n    const list = props.filesInFolders;\n    const collapsePanels = [];\n\n    for (let [folder, fileArr] of Object.entries(list)) {\n\n        const collapsePanel = (\n            <Panel header={<>\n                <FolderTwoTone\n                    style={{marginRight: '5px', fontSize: '30px', position: 'relative', bottom: '-5px'}}/>\n                {folder}</>}\n                   style={{fontWeight: 'bold'}}\n                   extra={Object.keys(props.uploadedFiles).length === 0 ? <DeleteCreative removeFilesToLoad={props.removeFilesToLoad} folder={folder}/> : null}\n                   key={folder}>\n                <List size=\"small\"\n                      style={{fontWeight: 'normal', marginLeft: '45px'}}\n                      dataSource={fileArr}\n                      renderItem={item => <List.Item>\n                          <FileTwoTone style={{\n                              marginRight: '5px',\n                              fontSize: '18px',\n                              position: 'relative',\n                              bottom: '-1px'\n                          }}/>{item}\n                      </List.Item>}\n                />\n            </Panel>\n        )\n\n        collapsePanels.push(collapsePanel)\n    }\n\n    return (\n        <Collapse ghost accordion={true}>\n            {collapsePanels}\n        </Collapse>\n    )\n}\n\nexport default ListOfCreatives;","import React from 'react';\nimport {Button, Modal, notification} from 'antd';\nimport ListOfCreatives from \"../ListOfCreatives/ListOfCreatives\";\nimport {ExclamationCircleOutlined} from \"@ant-design/icons\";\n\nconst UploadedCreativesList = (props) => {\n\n    const confirm = () => {\n        Modal.confirm({\n            title: 'Warning!',\n            icon: <ExclamationCircleOutlined/>,\n            content: 'You will lose the uploaded data',\n            okText: 'Continue',\n            cancelText: 'Cancel',\n            onOk: async () => {\n                try {\n                    await props.deleteFiles();\n                    await props.clearAllVariationsDirectory();\n\n                    notification.success({\n                        message: 'Success!',\n                        description:\n                            'The data has been reset.',\n                        placement: 'bottomRight'\n                    });\n                } catch (e) {\n                    props.toggleIsFetching(false);\n\n                    notification.error({\n                        message: 'Error!',\n                        description:\n                            'Couldn\\'t delete the data. Please try again.',\n                        placement: 'bottomRight'\n                    });\n                }\n            }\n        });\n    }\n\n    return (\n        <>\n            <Button onClick={confirm}\n                    style={{margin: '20px 0 0 20px'}}\n                    type=\"primary\"\n            >UPLOAD AGAIN\n            </Button>\n            <ListOfCreatives filesInFolders={props.uploadedFiles}\n                             uploadedFiles={props.uploadedFiles}/>\n        </>\n    );\n}\n\nexport default UploadedCreativesList;","import React from 'react';\nimport {Button, notification, Space} from 'antd';\nimport ListOfCreatives from \"../ListOfCreatives/ListOfCreatives\";\nimport {useHistory} from \"react-router-dom\";\n\nconst CreativesToUploadList = (props) => {\n    const history = useHistory();\n\n    const onClick = async () => {\n        try {\n            await props.uploadFiles(props.filesToUpload);\n\n            history.push('/uploadCreatives/result');\n\n            notification.success({\n                message: 'Success!',\n                description:\n                    'Creatives have been successfully uploaded.',\n                placement: 'bottomRight'\n            });\n        } catch (e) {\n            props.toggleIsFetching(false);\n\n            notification.error({\n                message: 'Error!',\n                description:\n                    'Failed to upload files to the server. Please try again.',\n                placement: 'bottomRight'\n            });\n        }\n    }\n\n    return (\n        <><Space style={{margin: '20px 0 0 20px'}}>\n            <Button onClick={onClick}\n                    loading={props.isFetching}\n                    type=\"primary\">UPLOAD TO THE SERVER\n            </Button>\n            <Button onClick={() => props.resetFiles()}\n                    type=\"primary\"\n                    ghost>REMOVE ALL\n            </Button>\n        </Space>\n            <ListOfCreatives filesInFolders={props.filesInFolders}\n                             removeFilesToLoad={props.removeFilesToLoad}\n                             uploadedFiles={props.uploadedFiles}\n            />\n        </>\n\n    );\n}\n\nexport default CreativesToUploadList;","import React from 'react';\nimport DragField from \"./DragField/DragField\";\nimport UploadedCreativesList from \"./UploadedCreativesList/UploadedCreativesList\";\nimport CreativesToUploadList from \"./CreativesToUploadList/CreativesToUploadList\";\n\nconst UploadCreativesProcess = (props) => {\n    return (\n        <>\n            {\n                props.filesToUpload.length !== props.amountOfFilesToLoad\n                && !props.isCreativesReady\n                && <DragField\n                    addFileToLoad={props.addFileToLoad}\n                    setAmountOfFilesToLoad={props.setAmountOfFilesToLoad}\n                />\n            }\n            {\n                props.isCreativesReady\n                && <UploadedCreativesList\n                    filesInFolders={props.uploadedFiles}\n                    uploadedFiles={props.uploadedFiles}\n                    clearAllVariationsDirectory={props.clearAllVariationsDirectory}\n                    deleteFiles={props.deleteFiles}\n                    toggleIsFetching={props.toggleIsFetching}\n                />\n            }\n            {\n                props.filesToUpload.length !== 0\n                && <CreativesToUploadList\n                    filesInFolders={props.filesInFolders}\n                    removeFilesToLoad={props.removeFilesToLoad}\n                    uploadedFiles={props.uploadedFiles}\n                    resetFiles={props.resetFiles}\n                    isFetching={props.isFetching}\n                    uploadFiles={props.uploadFiles}\n                    filesToUpload={props.filesToUpload}\n                    toggleIsFetching={props.toggleIsFetching}\n                />\n            }\n        </>\n    );\n}\n\nexport default UploadCreativesProcess;","import {createAllVariationsAPI} from \"../../api/api\";\n\nconst TOGGLE_IS_FETCHING_ALL_VARIATIONS = 'automation-toolkit/createAllVariations/TOGGLE_IS_FETCHING_ALL_VARIATIONS';\nconst TOGGLE_IS_VARIATIONS_CREATED = 'automation-toolkit/createAllVariations/TOGGLE_IS_VARIATIONS_CREATED';\nconst SET_FILE_TO_DOWNLOAD_NAME = 'automation-toolkit/createAllVariations/SET_FILE_TO_DOWNLOAD_NAME';\nconst RESET_DATA_ALL_VARIATIONS = 'automation-toolkit/createAllVariations/RESET_DATA_ALL_VARIATIONS';\n\nconst initialState = {\n    isFetching: false,\n    isVariationsCreated: false,\n    fileToDownloadName: ''\n}\n\nconst createAllVariationsReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case RESET_DATA_ALL_VARIATIONS:\n            return initialState;\n        case TOGGLE_IS_FETCHING_ALL_VARIATIONS:\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        case TOGGLE_IS_VARIATIONS_CREATED:\n            return {\n                ...state,\n                isVariationsCreated: action.isVariationsCreated\n            }\n        case SET_FILE_TO_DOWNLOAD_NAME:\n            return {\n                ...state,\n                fileToDownloadName: action.fileToDownloadName\n            }\n        default:\n            return state\n    }\n}\n\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING_ALL_VARIATIONS, isFetching: isFetching});\nexport const toggleIsVariationsCreated = (isCreated) => ({type: TOGGLE_IS_VARIATIONS_CREATED, isVariationsCreated: isCreated});\nexport const setFileToDownloadName = (fileName) => ({type: SET_FILE_TO_DOWNLOAD_NAME, fileToDownloadName: fileName});\nexport const resetData = () => ({type: RESET_DATA_ALL_VARIATIONS})\n\nexport const createAllVariations = (snippetsObj) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n\n        const res = await createAllVariationsAPI.createVariations(snippetsObj);\n\n        dispatch(toggleIsFetching(false));\n        dispatch(setFileToDownloadName(res.data.fileName));\n        dispatch(toggleIsVariationsCreated(true));\n    }\n}\n\nexport const clearAllVariationsDirectory = () => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n\n        await createAllVariationsAPI.clearDirectory();\n\n        dispatch(resetData());\n    }\n}\n\nexport default createAllVariationsReducer;","import React from 'react';\nimport {Spin} from \"antd\";\n\nconst WithFetchingHoc = (Component) => {\n    return (props) => {\n        return (\n            <Spin size=\"large\" spinning={props.isFetching} tip=\"Loading...\">\n                <Component {...props}/>\n            </Spin>\n        )\n    };\n}\n\nexport default WithFetchingHoc;","import {connect} from \"react-redux\";\nimport {\n    addFileToLoad, deleteFiles,\n    removeFilesToLoad, resetFiles,\n    setAmountOfFilesToLoad, toggleIsFetching, uploadFiles\n} from \"../../../redux/reducers/uploadCreativesReducer\";\nimport UploadCreativesProcess from \"./UploadCreativesProcess\";\nimport {clearAllVariationsDirectory} from \"../../../redux/reducers/createAllVariationsReducer\";\nimport WithFetchingHoc from \"../../../hoc/WithFetchingHoc\";\nimport {compose} from \"redux\";\nimport {\n    getAmountOfFilesToLoad,\n    getFilesInFolders,\n    getFilesToUpload, getIsCreativesReady, getIsUploadCreativesFetching, getUploadedFiles\n} from \"../../../redux/selectors/uploadCreativesSelectors\";\n\nconst mapStateToProps = (state) => {\n    return {\n        filesInFolders: getFilesInFolders(state),\n        filesToUpload: getFilesToUpload(state),\n        amountOfFilesToLoad: getAmountOfFilesToLoad(state),\n        isFetching: getIsUploadCreativesFetching(state),\n        uploadedFiles: getUploadedFiles(state),\n        isCreativesReady: getIsCreativesReady(state)\n    }\n}\n\nconst mapDispatchToProps = {\n    addFileToLoad,\n    removeFilesToLoad,\n    setAmountOfFilesToLoad,\n    toggleIsFetching,\n    resetFiles,\n    uploadFiles,\n    deleteFiles,\n    clearAllVariationsDirectory\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    WithFetchingHoc\n)(UploadCreativesProcess)","import React from 'react';\nimport {Result, Button} from 'antd';\nimport {DownloadOutlined, HomeOutlined} from \"@ant-design/icons\";\nimport {Link} from \"react-router-dom\";\n\nconst UploadResult = () => {\n    return (\n        <>\n            <Result\n                status=\"success\"\n                title=\"Successfully Uploaded Creatives!\"\n                subTitle=\"You have just successfully uploaded creatives to the system.\n                Your uploaded creatives will be used to create all the variations and to preview the dynamic company in the future.\n                Tip: Now you can upload and configure dynamic data.\"\n                extra={[\n                    <Link key=\"showCreatives\" to={'/uploadCreatives'}><Button type=\"primary\"><DownloadOutlined/>Show Uploaded Creatives</Button></Link>,\n                    <Link key=\"home\" to={'/'}><Button type=\"primary\" ghost><HomeOutlined/>GO TO HOME PAGE</Button></Link>\n                ]}\n            />\n        </>\n    );\n}\n\nexport default UploadResult;","import React from 'react';\nimport {Route} from \"react-router-dom\";\nimport UploadCreativesProcessContainer from \"./UploadCreativesProcess/UploadCreativesProcessContainer\";\nimport UploadResult from \"./UploadResult/UploadResult\";\n\nconst UploadCreatives = () => {\n    return (\n        <>\n            <Route exact path={'/uploadCreatives'} render={() => <UploadCreativesProcessContainer/>}/>\n            <Route exact path={'/uploadCreatives/result'} render={() => <UploadResult/>}/>\n        </>\n    );\n}\n\nexport default UploadCreatives;","import {Button, notification, Typography, Space} from \"antd\";\nimport React from \"react\";\nimport {createAllVariationsAPI} from \"../../../../api/api\";\nimport fileDownload from \"js-file-download\";\n\nconst {Text} = Typography;\n\nconst DownloadArchive = (props) => {\n    const download = async () => {\n        try {\n            const file = await createAllVariationsAPI.downloadArchive();\n\n            fileDownload(file.data, 'creatives.zip');\n        } catch (e) {\n            notification.error({\n                message: 'Error!',\n                description:\n                    'Failed to download an archive. Please try again.',\n                placement: 'bottomRight'\n            });\n        }\n    }\n    return (\n        <Space>\n            <Text strong>{props.fileToDownloadName}</Text>\n            <Button type=\"primary\" onClick={download}>DOWNLOAD</Button>\n        </Space>\n    )\n}\n\nexport default DownloadArchive;","import React from \"react\";\nimport {Typography, Button, Space, notification} from 'antd';\nimport DownloadArchive from \"./DownloadArchive/DownloadArchive\";\n\nconst {Text} = Typography;\n\nconst GetStaticVariationsProcess = (props) => {\n    const numberOfSizes = Object.keys(props.creatives).length;\n    const numberOfAllVariations = props.snippets.size;\n    const numberOfCreatives = props.snippets.size * numberOfSizes;\n\n    const onClick = async () => {\n        try {\n            const snippetsObj = Object.fromEntries(props.snippets);\n\n            await props.createAllVariations(snippetsObj);\n\n            notification.success({\n                message: 'Success!',\n                description:\n                    'All creative variations have been created.',\n                placement: 'bottomRight'\n            });\n        } catch (e) {\n            props.toggleIsFetching(false);\n\n            notification.error({\n                message: 'Error!',\n                description:\n                    'Failed to create all variations. Please try again.',\n                placement: 'bottomRight'\n            });\n        }\n    }\n\n    return (\n        // <Spin size=\"large\" spinning={props.isFetching} tip=\"Creating variations...\">\n            <Space direction=\"vertical\">\n                <Text strong>You uploaded {numberOfSizes} sizes.</Text>\n                <Text strong>The number of all static variations is {numberOfAllVariations}</Text>\n                <Text strong>The number of all creatives is {numberOfCreatives}</Text>\n                <Button type=\"primary\" onClick={onClick}>MAKE ALL VARIATIONS</Button>\n                {\n                    props.isVariationsCreated && <DownloadArchive fileToDownloadName={props.fileToDownloadName}/>\n                }\n            </Space>\n        // </Spin>\n    )\n}\n\nexport default GetStaticVariationsProcess;","import React from 'react';\nimport {Redirect} from \"react-router-dom\";\n\nconst WithNoDataRedirect = (Component) => {\n    return (props) => {\n        if (!props.isNoData) return <Redirect to={'/'}/>\n        return <Component {...props}/>\n    }\n}\n\nexport default WithNoDataRedirect;","export const getIsFetchingAllVariations = state => state.createAllVariations.isFetching;\nexport const getIsVariationsCreated = state => state.createAllVariations.isVariationsCreated;\nexport const getFileToDownloadName = state => state.createAllVariations.fileToDownloadName;","import {connect} from \"react-redux\";\nimport GetStaticVariationsProcess from \"./GetStaticVariationsProcess\";\nimport {createAllVariations, toggleIsFetching} from \"../../../redux/reducers/createAllVariationsReducer\";\nimport {compose} from \"redux\";\nimport WithFetchingHoc from \"../../../hoc/WithFetchingHoc\";\nimport WithNoDataRedirect from \"../../../hoc/WithNoDataRedirect\";\nimport {\n    getFileToDownloadName,\n    getIsFetchingAllVariations,\n    getIsVariationsCreated\n} from \"../../../redux/selectors/allVariationsSelectors\";\nimport {getIsDataReady, getSnippets} from \"../../../redux/selectors/dynamicDataSelectors\";\nimport {getIsCreativesReady, getUploadedFiles} from \"../../../redux/selectors/uploadCreativesSelectors\";\n\nconst mapStateToProps = (state) => {\n    return {\n        snippets: getSnippets(state),\n        creatives: getUploadedFiles(state),\n        isFetching: getIsFetchingAllVariations(state),\n        isVariationsCreated: getIsVariationsCreated(state),\n        fileToDownloadName: getFileToDownloadName(state),\n        isNoData: getIsDataReady(state) && getIsCreativesReady(state)\n    }\n}\n\nconst mapDispatchToProps = {\n    createAllVariations,\n    toggleIsFetching\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    WithFetchingHoc,\n    WithNoDataRedirect\n)(GetStaticVariationsProcess)","import React from 'react';\nimport {Route} from \"react-router-dom\";\nimport GetStaticVariationsProcessContainer from \"./GetStaticVariationsProcess/GetStaticVariationsProcessContainer\";\n\nconst GetStaticVariations = () => {\n    return (\n        <>\n            <Route exact path={'/getStaticVariations'} render={() => <GetStaticVariationsProcessContainer/>}/>\n            {/*<Route exact path={'/uploadCreatives/result'} render={() => <UploadResult/>}/>*/}\n        </>\n    );\n}\n\nexport default GetStaticVariations;","import React from 'react';\nimport {Select} from 'antd';\n\nconst {Option} = Select;\n\nconst SelectType = (props) => {\n\n    const options = props.listOfTypes.map(listItem => <Option key={listItem} value={listItem}>{listItem}</Option>)\n\n    const handleChange = (value) => {\n        const typeObj = {\n            rowIndex: props.rowIndex,\n            elementIndex: props.sheetIndex,\n            typeValue: value\n        }\n\n        props.setType(typeObj)\n    }\n\n    return (\n        <>\n            <Select defaultValue={props.defaultTypes[props.rowIndex]} style={{width: 120}} onChange={handleChange}>\n                {options}\n            </Select>\n        </>\n    );\n}\n\nexport default SelectType;","import React from 'react';\nimport {Typography} from 'antd';\n\nconst {Paragraph} = Typography;\n\nconst TableHeader = (props) => {\n    const editSheetName = (value) => props.updateSheetName(props.index, value)\n\n    return (\n        <Paragraph\n            editable={{\n                tooltip: 'Edit element name',\n                onChange: editSheetName,\n            }}\n        >\n            {props.elementName}\n        </Paragraph>\n    );\n}\n\nexport default TableHeader;","import React from 'react';\nimport {InputNumber, Typography} from 'antd';\n\nconst {Paragraph} = Typography;\n\nconst TableHeader = (props) => {\n\n    const onQuantityChange = (value) => {\n        props.setQuantity(props.index, value)\n    }\n\n    return (\n        <div style={{display: 'flex'}}>\n            <Paragraph>Quantity:</Paragraph>\n            <InputNumber min={1} max={props.dataLength - 1}\n                         value={props.quantity}\n                         onChange={onQuantityChange}/>\n        </div>\n    );\n}\n\nexport default TableHeader;","const random = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst getRandomRowIndexes = (initialIndex, quantity, elementLastIndex) => {\n    const randomRowIndexes = [initialIndex];\n    const indexesMap = new Set();\n\n    indexesMap.add(initialIndex);\n\n    while (randomRowIndexes.length < quantity) {\n        const randomIndex = random(1, elementLastIndex);\n\n        if (!indexesMap.has(randomIndex)) randomRowIndexes.push(randomIndex);\n        indexesMap.add(randomIndex);\n    }\n    return randomRowIndexes;\n}\n\nexport default getRandomRowIndexes;","const processValueBasedOnType = (objValue, objType) => {\n    // this is a trick for Googlesheet APIv4 specificity => https://stackoverflow.com/questions/38442634/googlesheet-apiv4-getting-empty-cells\n    if (typeof objValue === \"undefined\") return '';\n\n    try {\n        switch (objType) {\n            case 'Boolean':\n                if (objValue.toLowerCase() === 'true' || objValue.toLowerCase() === 'false') {\n                    return objValue.toLowerCase() === 'true';\n                } else {\n                    throw new Error('The value is not a boolean')\n                }\n            case 'Exit URL':\n            case 'Image URL':\n                return {Url: objValue};\n            case 'DateTime':\n                const splitRawDateTime = objValue.split(' ');\n                const splitDate = splitRawDateTime[0].split('/');\n                const formattedDate = `${splitDate[2]}-${splitDate[0]}-${splitDate[1]}`;\n                const time = `T${splitRawDateTime[1]}`;\n                const timeZone = splitRawDateTime[2].substring(1, splitRawDateTime[2].length - 1);\n                const isoFormatDate = formattedDate + time + timeZone;\n                const parsedDate = Date.parse(isoFormatDate);\n\n                return {RawValue: objValue, UtcValue: parsedDate};\n            default:\n                return objValue;\n        }\n    } catch (e) {\n        return objValue;\n    }\n\n}\n\nexport default processValueBasedOnType;\n","const createAllSnippetVariations = array => {\n    // const allVariants = {};\n    const allVariants = new Map();\n    const max = array.length - 1;\n    const recursivePass = (objInit, string, i) => {\n        for (let j = 0; j < array[i].length; j++) {\n            let cloneString = string\n            const cloneObj = JSON.parse(JSON.stringify(objInit))\n            const name = array[i][j].elementName\n            const value = array[i][j].dynamicData\n            const uniqueString = array[i][j].uniqueString\n\n            cloneObj[name] = value;\n            cloneString += `|${uniqueString}`\n\n            // i === max ? allVariants[cloneString] = cloneObj : recursivePass(cloneObj, cloneString, i + 1);\n            i === max ? allVariants.set(cloneString, cloneObj) : recursivePass(cloneObj, cloneString, i + 1);\n        }\n    }\n\n    recursivePass({}, '', 0);\n\n    return allVariants;\n}\n\nexport default createAllSnippetVariations;\n","import getRandomRowIndexes from \"./getRandomRowIndexes\";\nimport processValueBasedOnType from \"./processValueBasedOnType\";\nimport createAllSnippetVariations from \"./createAllSnippetVariations\";\n\nconst createSnippets = (data) => {\n    const snippets = [];\n\n    data.forEach(element => {\n        const elementTitles = element.data[0];\n        const elementName = element.elementName;\n        const quantity = element.quantity;\n        const types = element.selectedTypes;\n        const elementSnippets = [];\n\n        for (let i = 1; i < element.data.length; i++) {\n            const devDynamicContent = {dynamicData: [], uniqueString: '', elementName};\n            const randomRowIndexes = getRandomRowIndexes(i, quantity, element.data.length - 1);\n\n            for (let j = 0; j < quantity; j++) {\n                const elementObj = {};\n                const rowIndex = randomRowIndexes[j];\n\n                for (let k = 0; k < types.length; k++) {\n                    const objValue = element.data[rowIndex][k];\n                    const objType = types[k];\n\n                    elementObj[elementTitles[k]] = processValueBasedOnType(objValue, objType)\n                }\n\n                devDynamicContent.dynamicData.push(elementObj);\n            }\n            devDynamicContent.uniqueString = `${elementName}(${element.data[i][0]})`\n            elementSnippets.push(devDynamicContent);\n        }\n        snippets.push(elementSnippets);\n    })\n    return createAllSnippetVariations(snippets)\n}\nexport default createSnippets;","import React, {useRef, useState} from 'react';\nimport {BackTop, Table, Button, Typography, Input, notification} from 'antd';\nimport SelectType from \"./SelectType/SelectType\";\nimport {Link} from \"react-router-dom\";\nimport TableHeader from \"./TableHeader/TableHeader\";\nimport TableFooter from \"./TableFooter/TableFooter\";\nimport createSnippets from \"../../../utils/createSnippets\";\n\nconst {Title} = Typography;\n\nconst ShowSheetsData = (props) => {\n    const [dynamicId, setDynamicId] = useState('')\n    const dynamicIdInputRef = useRef(null);\n    const sheetData = props.data;\n    const dataSource = [];\n    const columnsArr = [];\n\n    sheetData.forEach((data, sheetIndex) => {\n        const rowsArr = [];\n\n        for (let i = 0; i < data.data[0].length; i++) {\n            const obj = {\n                sheetName: data.sheetName,\n                key: `${data.sheetName}_${data.data[0][i]}_${data.data[1][i]}`,\n                'Field Name': data.data[0][i],\n                'Field Type': '',\n                'Sample Value': data.data[1][i]\n            }\n            rowsArr.push(obj)\n        }\n\n        dataSource.push(rowsArr)\n\n        const columns = [\n            {\n                title: 'Field Name',\n                dataIndex: 'Field Name',\n                key: 'Field Name',\n            },\n            {\n                title: 'Field Type',\n                dataIndex: 'Field Type',\n                key: 'Field Type',\n                render: (text, record, index) =>\n                    <SelectType\n                        setType={props.setType}\n                        listOfTypes={props.listOfTypes}\n                        sheetName={record.sheetName}\n                        defaultTypes={sheetData[sheetIndex].selectedTypes}\n                        rowIndex={index}\n                        sheetIndex={sheetIndex}\n                    />\n            },\n            {\n                title: 'Sample Value',\n                dataIndex: 'Sample Value',\n                key: 'Sample Value',\n            }\n        ];\n\n        columnsArr.push(columns)\n    })\n\n    const tables = dataSource.map((sheet, index) =>\n\n        <Table\n            key={index}\n            bordered={true}\n            title={() => <TableHeader updateSheetName={props.updateElementName}\n                                      elementName={sheetData[index].elementName}\n                                      index={index}/>}\n            footer={() => <TableFooter setQuantity={props.setQuantity}\n                                       dataLength={sheetData[index].data.length}\n                                       quantity={sheetData[index].quantity}\n                                       index={index}/>}\n            size=\"small\"\n            pagination={false}\n            style={{marginBottom: '45px'}}\n            columns={columnsArr[index]}\n            dataSource={sheet}\n        />\n    )\n\n    const onClick = () => {\n        props.setDataReadyFlag(true);\n        props.setDynamicId(dynamicId);\n        const codeSnippetsArr = createSnippets(props.data);\n        props.addCodeSnippets(codeSnippetsArr);\n\n        notification.success({\n            message: 'Success!',\n            description:\n                'Dynamic snippets have been created.',\n            placement: 'bottomRight'\n        });\n    }\n\n    return (\n        <>\n            <Title level={4} style={{textAlign: 'left', marginTop: '50px'}}>Specify the dynamic ID</Title>\n            <Input ref={dynamicIdInputRef}\n                   onChange={e => setDynamicId(e.target.value)}\n                   allowClear={true}\n                   value={dynamicId}\n                   placeholder=\"Dynamic ID\"\n                   style={{width: '50%'}}/>\n            <Title level={4} style={{textAlign: 'left', marginTop: '50px', marginBottom: '20px'}}>Choose field type for\n                each property</Title>\n            {tables}\n\n            <Link to='/uploadGs/result'><Button onClick={onClick} type=\"primary\">BUILD DATA</Button></Link>\n            <BackTop/>\n        </>\n    );\n}\n\nexport default ShowSheetsData;","const ADD_CODE_SNIPPETS = 'automation-toolkit/dynamicData/ADD_CODE_SNIPPETS';\nconst SET_DATA_READY_FLAG = 'automation-toolkit/dynamicData/SET_DATA_READY_FLAG';\nconst ADD_DATA = 'automation-toolkit/dynamicData/ADD_DATA';\nconst SET_TYPE = 'automation-toolkit/dynamicData/SET_TYPE';\nconst SET_QUANTITY = 'automation-toolkit/dynamicData/SET_QUANTITY';\nconst UPDATE_ELEMENT_NAME = 'automation-toolkit/dynamicData/UPDATE_ELEMENT_NAME';\nconst RESET_DATA_DYN_DATA = 'automation-toolkit/dynamicData/RESET_DATA_DYN_DATA';\nconst SET_DYNAMIC_ID = 'automation-toolkit/dynamicData/SET_DYNAMIC_ID';\n\nconst initialState = {\n    isDataReady: false,\n    listOfTypes: ['Text', 'Boolean', 'Exit URL', 'Image URL', 'DateTime'],\n    snippets: null,\n    data: [],\n    dynamicId: ''\n}\n\nconst dynamicDataReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_DYNAMIC_ID:\n            return {\n                ...state,\n                dynamicId: action.id\n            }\n        case RESET_DATA_DYN_DATA:\n            return initialState;\n        case ADD_DATA:\n            const processedData = [];\n\n            action.data.forEach(data => {\n                const dataObj = {\n                    elementName: data.element,\n                    quantity: 1,\n                    selectedTypes: Array(data.data[0].length).fill('text'),\n                    data: data.data\n                }\n\n                processedData.push(dataObj)\n            })\n\n            return {\n                ...state,\n                data: processedData\n            }\n        case SET_TYPE:\n            const initSelectedTypes = [...state.data[action.typeInfo.elementIndex].selectedTypes]\n\n            initSelectedTypes[action.typeInfo.rowIndex] = action.typeInfo.typeValue\n\n            return {\n                ...state,\n                data: [\n                    ...state.data.slice(0, action.typeInfo.elementIndex),\n                    {...state.data[action.typeInfo.elementIndex], selectedTypes: [...initSelectedTypes]},\n                    ...state.data.slice(action.typeInfo.elementIndex + 1)\n                ]\n            }\n        case SET_QUANTITY:\n            return {\n                ...state,\n                data: [\n                    ...state.data.slice(0, action.index),\n                    {...state.data[action.index], quantity: action.quantity},\n                    ...state.data.slice(action.index + 1)\n                ]\n            }\n        case UPDATE_ELEMENT_NAME:\n            return {\n                ...state,\n                data: [\n                    ...state.data.slice(0, action.index),\n                    {...state.data[action.index], elementName: action.newElementName},\n                    ...state.data.slice(action.index + 1)\n                ]\n            }\n        case ADD_CODE_SNIPPETS:\n            return {\n                ...state,\n                snippets: action.dataMap\n            }\n        case SET_DATA_READY_FLAG:\n            return {\n                ...state,\n                isDataReady: action.flag,\n            }\n        default:\n            return state\n    }\n}\n\nexport const resetData = () => ({type: RESET_DATA_DYN_DATA})\nexport const addData = (data) => ({type: ADD_DATA, data: data})\nexport const setType = (typeInfoObj) => ({type: SET_TYPE, typeInfo: typeInfoObj})\nexport const setQuantity = (index, number) => ({type: SET_QUANTITY, index: index, quantity: number})\nexport const updateElementName = (index, text) => ({type: UPDATE_ELEMENT_NAME, index: index, newElementName: text})\nexport const addCodeSnippets = (data) => ({type: ADD_CODE_SNIPPETS, dataMap: data})\nexport const setDataReadyFlag = (flagBoolean) => ({type: SET_DATA_READY_FLAG, flag: flagBoolean})\nexport const setDynamicId = (id) => ({type: SET_DYNAMIC_ID, id: id})\n\nexport default dynamicDataReducer;","import {connect} from \"react-redux\";\nimport ShowSheetsData from \"./ShowSheetsData\";\nimport {\n    addCodeSnippets,\n    setDataReadyFlag,\n    setType,\n    setQuantity,\n    updateElementName, setDynamicId\n} from \"../../../redux/reducers/dynamicDataReducer\";\nimport {getData, getListOfTypes} from \"../../../redux/selectors/dynamicDataSelectors\";\n\nconst mapStateToProps = (state) => {\n    return {\n        data: getData(state),\n        listOfTypes: getListOfTypes(state)\n    }\n}\n\nconst ShowSheetsDataContainer = connect(mapStateToProps, {\n    addCodeSnippets,\n    setDataReadyFlag,\n    setType,\n    setQuantity,\n    updateElementName,\n    setDynamicId\n})(ShowSheetsData)\n\nexport default ShowSheetsDataContainer;","import React from 'react';\nimport {message, Typography, Button, Modal} from 'antd';\nimport {ExclamationCircleOutlined, CheckSquareOutlined} from '@ant-design/icons';\n\nconst {Title, Paragraph, Link} = Typography;\n\nconst ChangeSpreadsheetLink = (props) => {\n\n    const confirm = () => {\n        Modal.confirm({\n            title: 'Warning!',\n            icon: <ExclamationCircleOutlined/>,\n            content: 'You will lose the downloaded data',\n            okText: 'Continue',\n            cancelText: 'Cancel',\n            onOk: () => {\n                props.resetData();\n                props.resetGsData()\n                message.success('The data has been reset!');\n            }\n        });\n    }\n\n    return (\n        <>\n            <Title level={4} style={{textAlign: 'left', marginTop: '50px'}}>\n                You have already provided a link to the spreadsheet\n                <CheckSquareOutlined style={{fontSize: '25px', color: '#52c41a', marginLeft: '8px'}}/>\n            </Title>\n\n            <Paragraph>You are currently working with a <Link href={props.spreadsheetUrl}\n                                                              strong={true}\n                                                              target=\"_blank\">{props.spreadsheetName}</Link>spreadsheet.\n            </Paragraph>\n\n            <Button onClick={confirm} type=\"primary\">Change the spreadsheet</Button>\n        </>\n    );\n}\n\nexport default ChangeSpreadsheetLink;","import React from 'react';\nimport {Typography, Button, Input, notification} from 'antd';\nimport {useHistory} from \"react-router-dom\";\n\nconst {Title} = Typography;\n\nconst GetSheetInfo = (props) => {\n    const history = useHistory();\n\n    const onClick = async () => {\n        try {\n            await props.getSheetList(props.urlInputText);\n\n            notification.success({\n                message: 'Success!',\n                description:\n                    'The list of sheets in the spreadsheet is loaded successfully.',\n                placement: 'bottomRight'\n            });\n\n            history.push('/uploadGs/step_1');\n        } catch (e) {\n            props.toggleIsFetching(false);\n\n            notification.error({\n                message: 'Error!',\n                description:\n                    'Failed to upload files to the server. Please try again.',\n                placement: 'bottomRight'\n            });\n        }\n    }\n    return (\n        <>\n            <Title level={4} style={{textAlign: 'left', marginTop: '50px'}}>Select the content source data file you want\n                to\n                transform.</Title>\n            <Input onChange={e => props.updateUrlInputText(e.target.value)}\n                   allowClear={true}\n                   value={props.urlInputText}\n                   placeholder=\"Spreadsheet URL\"\n                   style={{width: '50%'}}/>\n\n            <Button onClick={onClick}\n                    disabled={!props.urlInputText}\n                    type=\"primary\"\n                    style={{marginLeft: '20px'}}>LOAD SPREADSHEET</Button>\n        </>\n    );\n}\n\nexport default GetSheetInfo;","import React, {useEffect, useState} from 'react';\nimport ChangeSpreadsheetLink from \"./ChangeSpreadsheetLink/ChangeSpreadsheetLink\";\nimport ProvideSpreadsheetLink from \"./ProvideSpreadsheetLink/ProvideSpreadsheetLink\";\n\nconst GetSheetInfo = (props) => {\n    const [isDisable, setIsDisable] = useState(props.spreadsheetName);\n\n    useEffect(() => {\n        setIsDisable(props.spreadsheetName)\n    }, [props.spreadsheetName])\n\n    return (\n        <>\n            {\n                isDisable\n                    ? <ChangeSpreadsheetLink spreadsheetName={props.spreadsheetName}\n                                             spreadsheetUrl={props.spreadsheetUrl}\n                                             resetData={props.resetData}\n                                             resetGsData={props.resetGsData}/>\n                    : <ProvideSpreadsheetLink urlInputText={props.urlInputText}\n                                              toggleIsFetching={props.toggleIsFetching}\n                                              getSheetList={props.getSheetList}\n                                              updateUrlInputText={props.updateUrlInputText}/>\n            }\n        </>\n    );\n}\n\nexport default GetSheetInfo;","import {spreadsheetAPI} from \"../../api/api\";\nimport {addData} from \"./dynamicDataReducer\";\n\nconst ADD_LIST_OF_SHEETS_TO_UPLOAD = 'automation-toolkit/uploadGS/ADD_LIST_OF_SHEETS_TO_UPLOAD';\nconst UPDATE_URL_INPUT_TEXT = 'automation-toolkit/uploadGS/UPDATE_URL_INPUT_TEXT';\nconst TOGGLE_IS_FETCHING_UPLOAD_GS = 'automation-toolkit/uploadGS/TOGGLE_IS_FETCHING_UPLOAD_GS';\nconst SET_TYPE = 'automation-toolkit/uploadGS/SET_TYPE';\nconst RESET_DATA = 'automation-toolkit/uploadGS/RESET_DATA';\nconst SET_SHEET_INFO = 'automation-toolkit/uploadGS/SET_SHEET_INFO';\n\nconst initialState = {\n    urlInputText: '',\n    spreadsheetUrl: null,\n    spreadsheetName: null,\n    spreadsheetId: null,\n    isFetching: false,\n    totalListOfSheets: [],\n    listOfSheetsToUpload: []\n}\n\nconst uploadGSReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case RESET_DATA:\n            return initialState\n        case ADD_LIST_OF_SHEETS_TO_UPLOAD:\n            return {\n                ...state,\n                listOfSheetsToUpload: [...action.listToUpload]\n            }\n        case UPDATE_URL_INPUT_TEXT:\n            return {\n                ...state,\n                urlInputText: action.newText\n            }\n        case TOGGLE_IS_FETCHING_UPLOAD_GS:\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        case SET_SHEET_INFO:\n            return {\n                ...state,\n                urlInputText: '',\n                spreadsheetId: action.info.spreadsheetId,\n                spreadsheetName: action.info.spreadsheetName,\n                spreadsheetUrl: action.info.spreadsheetUrl,\n                listOfSheetsToUpload: [...action.info.listOfSheets],\n                totalListOfSheets: [...action.info.listOfSheets]\n            }\n        default:\n            return state\n    }\n}\nexport const updateUrlInputText = (textStr) => ({type: UPDATE_URL_INPUT_TEXT, newText: textStr});\nexport const addListOfSheetsToUpload = (arrList) => ({type: ADD_LIST_OF_SHEETS_TO_UPLOAD, listToUpload: arrList});\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING_UPLOAD_GS, isFetching: isFetching});\nexport const setType = (typeInfoObj) => ({type: SET_TYPE, typeInfo: typeInfoObj});\nexport const resetGsData = () => ({type: RESET_DATA});\nexport const setSheetInfo = (infoObj) => ({type: SET_SHEET_INFO, info: infoObj});\n\nexport const getSheetList = (urlInputText) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n\n        const spreadsheetInfo = await spreadsheetAPI.getSheetList(urlInputText);\n\n        dispatch(setSheetInfo(spreadsheetInfo.data.spreadsheetInfo));\n        dispatch(toggleIsFetching(false));\n    }\n}\n\nexport const getSheetsData = (spreadsheetId, listOfSheetsToUpload) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n\n        const spreadsheetData = await spreadsheetAPI.getSheetsData(spreadsheetId, listOfSheetsToUpload);\n\n        dispatch(toggleIsFetching(false));\n        dispatch(addData(spreadsheetData.data.sheetsData));\n    }\n}\n\nexport default uploadGSReducer;","export const getTotalListOfSheetsLength = state => state.uploadGS.totalListOfSheets.length;\nexport const getTotalListOfSheets = state => state.uploadGS.totalListOfSheets;\nexport const getUrlInputText = state => state.uploadGS.urlInputText;\nexport const getIsUploadGSFetching = state => state.uploadGS.isFetching;\nexport const getSpreadsheetName = state => state.uploadGS.spreadsheetName;\nexport const getSpreadsheetUrl = state => state.uploadGS.spreadsheetUrl;\nexport const getListOfSheetsToUpload = state => state.uploadGS.listOfSheetsToUpload;\nexport const getSpreadsheetId = state => state.uploadGS.spreadsheetId;\n","import {connect} from \"react-redux\";\nimport GetSheetInfo from \"./GetSheetInfo\";\nimport {\n    getSheetList,\n    resetGsData, toggleIsFetching,\n    updateUrlInputText\n} from \"../../../redux/reducers/uploadGSReducer\";\nimport {resetData} from \"../../../redux/reducers/dynamicDataReducer\";\nimport {compose} from \"redux\";\nimport WithFetchingHoc from \"../../../hoc/WithFetchingHoc\";\nimport {\n    getIsUploadGSFetching,\n    getSpreadsheetName,\n    getSpreadsheetUrl,\n    getUrlInputText\n} from \"../../../redux/selectors/uploadGSSelectors\";\n\nconst mapStateToProps = (state) => {\n    return {\n        urlInputText: getUrlInputText(state),\n        isFetching: getIsUploadGSFetching(state),\n        spreadsheetName: getSpreadsheetName(state),\n        spreadsheetUrl: getSpreadsheetUrl(state)\n    }\n}\n\nconst mapDispatchToProps = {\n    resetGsData,\n    updateUrlInputText,\n    resetData,\n    toggleIsFetching,\n    getSheetList\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    WithFetchingHoc\n)(GetSheetInfo)","import React, {useState} from 'react';\nimport {Select, Typography, Button, notification} from 'antd';\nimport {useHistory} from \"react-router-dom\";\n\nconst {Option} = Select;\nconst {Title} = Typography;\n\nconst ChooseSheet = (props) => {\n    const [isDisabled, toggleIsDisabled] = useState(false);\n    const totalSheetsList = props.totalListOfSheets;\n    const sheetsListToUpload = props.listOfSheetsToUpload;\n    const optionsList = totalSheetsList.map(listItem => <Option key={listItem} value={listItem}>{listItem}</Option>);\n    const history = useHistory();\n\n    const onChange = (value) => {\n        value.length <= 0 ? toggleIsDisabled(true) : toggleIsDisabled(false);\n        props.addListOfSheetsToUpload(value);\n    }\n\n    const onClick = async () => {\n        try {\n            await props.getSheetsData(props.spreadsheetId, props.listOfSheetsToUpload);\n\n            notification.success({\n                message: 'Success!',\n                description:\n                    'The spreadsheet data is loaded successfully.',\n                placement: 'bottomRight'\n            });\n\n            history.push('/uploadGs/step_2');\n        } catch (e) {\n            props.toggleIsFetching(false);\n\n            notification.error({\n                message: 'Error!',\n                description:\n                    'Failed to load data from the spreadsheet. Please try again.',\n                placement: 'bottomRight'\n            });\n        }\n    }\n\n    return (\n        <>\n            <Title level={4} style={{textAlign: 'left', marginTop: '50px'}}>Choose sheets you want to upload.</Title>\n            <Select\n                mode=\"multiple\"\n                allowClear\n                style={{width: '50%'}}\n                placeholder=\"Please select at least one sheet to upload\"\n                defaultValue={sheetsListToUpload}\n                onChange={onChange}\n            >\n                {optionsList}\n            </Select>\n            <Button type=\"primary\" onClick={onClick} disabled={isDisabled}\n                    style={{marginLeft: '20px'}}>LOAD SHEETS</Button>\n        </>\n    );\n}\n\nexport default ChooseSheet;","import {connect} from \"react-redux\";\nimport ChooseSheet from \"./ChooseSheet\";\nimport {addListOfSheetsToUpload, getSheetsData} from \"../../../redux/reducers/uploadGSReducer\";\nimport {compose} from \"redux\";\nimport WithFetchingHoc from \"../../../hoc/WithFetchingHoc\";\nimport {\n    getIsUploadGSFetching,\n    getListOfSheetsToUpload,\n    getSpreadsheetId,\n    getTotalListOfSheets\n} from \"../../../redux/selectors/uploadGSSelectors\";\n\nconst mapStateToProps = (state) => {\n    return {\n        totalListOfSheets: getTotalListOfSheets(state),\n        listOfSheetsToUpload: getListOfSheetsToUpload(state),\n        spreadsheetId: getSpreadsheetId(state),\n        isFetching: getIsUploadGSFetching(state)\n    }\n}\n\nconst mapDispatchToProps = {\n    addListOfSheetsToUpload,\n    getSheetsData\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    WithFetchingHoc\n)(ChooseSheet)\n\n","import React from 'react';\nimport {Steps} from 'antd';\nimport {NavLink} from \"react-router-dom\";\nimport {HddFilled, SettingFilled, AreaChartOutlined} from '@ant-design/icons';\nimport styles from './Progress.module.css'\n\nconst {Step} = Steps;\n\nconst Progress = (props) => {\n    let step_1Disabled = !props.totalListOfSheetsLength ? styles.disabled : '';\n    let step_2Disabled = !props.sheetDataLength ? styles.disabled : '';\n\n    return (\n        <Steps type=\"navigation\" current={+props.match.params.step} responsive={true}>\n            <Step\n                title={<NavLink activeClassName={styles.selected}\n                                className={styles.title}\n                                to='/uploadGs/step_0'>Load spreadsheet info</NavLink>}\n                icon={<NavLink className={styles.icon}\n                               to='/uploadGs/step_0'><AreaChartOutlined/></NavLink>}\n            />\n            <Step disabled={!props.totalListOfSheetsLength}\n                  title={<NavLink activeClassName={styles.selected}\n                                  className={`${styles.title} ${step_1Disabled}`}\n                                  to='/uploadGs/step_1'>Choose sheets to load</NavLink>}\n                  icon={<NavLink className={`${styles.icon} ${step_1Disabled}`}\n                                 to='/uploadGs/step_1'><HddFilled /></NavLink>}\n            />\n            <Step disabled={!props.sheetDataLength}\n                  title={<NavLink activeClassName={styles.selected}\n                                  className={`${styles.title} ${step_2Disabled}`}\n                                  to='/uploadGs/step_2'>Set up the code snippet</NavLink>}\n                  icon={<NavLink className={`${styles.icon} ${step_2Disabled}`}\n                                 to='/uploadGs/step_2'><SettingFilled /></NavLink>}/>\n        </Steps>\n    );\n}\n\nexport default Progress;","import {connect} from \"react-redux\";\nimport Progress from \"./Progress\";\nimport {withRouter} from \"react-router-dom\";\nimport {getSheetDataLength} from \"../../../redux/selectors/dynamicDataSelectors\";\nimport {getTotalListOfSheetsLength} from \"../../../redux/selectors/uploadGSSelectors\";\n\nconst mapStateToProps = (state) => {\n    return {\n        totalListOfSheetsLength: getTotalListOfSheetsLength(state),\n        sheetDataLength: getSheetDataLength(state)\n    }\n}\n\nconst WithRouterProgress = withRouter(Progress)\n\nconst ShowSheetsDataContainer = connect(mapStateToProps, null)(WithRouterProgress)\n\nexport default ShowSheetsDataContainer;","import React from 'react';\nimport {Result, Button} from 'antd';\nimport {DownloadOutlined, EditOutlined} from \"@ant-design/icons\";\n\nconst UploadResult = () => {\n\n    return (\n        <>\n            <Result\n                status=\"success\"\n                title=\"Successfully Built Dynamic Snippets!\"\n                subTitle=\"Now you can get static versions of your dynamic creatives. You can also view all versions in the Preview section.\"\n                extra={[\n                    <Button type=\"primary\" key=\"console\"><DownloadOutlined />GET JSON</Button>,\n                    <Button key=\"buy\" type=\"primary\" ghost><EditOutlined />EDIT DATA</Button>,\n                ]}\n            />\n        </>\n    );\n}\n\nexport default UploadResult;","import React from 'react';\nimport {Route} from \"react-router-dom\";\nimport ShowSheetsDataContainer from \"./ShowSheetsData/ShowSheetsDataContainer\";\nimport GetSheetInfoContainer from \"./GetSheetsInfo/GetSheetInfoContainer\";\nimport ChooseSheetContainer from \"./ChooseSheet/ChooseSheetContainer\";\nimport ProgressContainer from \"./Progress/ProgressContainer\";\nimport UploadResult from \"./UploadResult/UploadResult\";\n\nconst UploadGS = () => {\n    return (\n        <div style={{maxWidth: '960px', margin: '0 auto', paddingTop: '24px'}}>\n            <Route path={'/uploadGs/step_:step?'} render={() => <ProgressContainer/>}/>\n            <Route exact path={'/uploadGs/step_0'} render={() => <GetSheetInfoContainer/>}/>\n            <Route exact path={'/uploadGs/step_1'} render={() => <ChooseSheetContainer/>}/>\n            <Route exact path={'/uploadGs/step_2'} render={() => <ShowSheetsDataContainer/>}/>\n            <Route exact path={'/uploadGs/result'} render={() => <UploadResult/>}/>\n        </div>\n    );\n}\n\nexport default UploadGS;","import {compose} from \"redux\";\nimport WithNoDataRedirect from \"../../hoc/WithNoDataRedirect\";\nimport UploadGS from \"./UploadGS\";\nimport {connect} from \"react-redux\";\nimport {getIsCreativesReady} from \"../../redux/selectors/uploadCreativesSelectors\";\n\nconst mapStateToProps = (state) => {\n    return {\n        isNoData: getIsCreativesReady(state)\n    }\n}\nexport default compose(\n    connect(mapStateToProps, {}),\n    WithNoDataRedirect\n)(UploadGS)","import './App.css';\nimport 'antd/dist/antd.css';\nimport {Layout} from 'antd';\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport StartPage from \"./components/StartPage/StartPage\";\nimport FooterSection from \"./components/FooterSection/FooterSection\";\nimport React from \"react\";\nimport HeaderSection from \"./components/HeaderSection/HeaderSection\";\nimport UploadCreatives from \"./components/UploadCreatives/UploadCreatives\";\nimport GetStaticVariations from \"./components/GetStaticVariations/GetStaticVariations\";\nimport UploadGSContainer from \"./components/UploadGS/UploadGSContainer\";\n\n//https://docs.google.com/spreadsheets/d/1Qa3o9DmsRm6O_znmB8Ms0P6CeOu-YluYImanmIGAuW0/edit#gid=0\nconst {Content} = Layout;\n\nfunction App() {\n\n    return (\n        <BrowserRouter>\n            <Layout style={{minHeight: '100vh'}}>\n                <HeaderSection/>\n                <Content className=\"main-content\" style={{width: '990px', margin: '0 auto'}}>\n                    <Route exact path={'/'} render={() => <StartPage/>}/>\n                    <Route path={'/uploadGs'} render={() => <UploadGSContainer/>}/>\n                    <Route path={'/uploadCreatives'} render={() => <UploadCreatives/>}/>\n                    <Route path={'/getStaticVariations'} render={() => <GetStaticVariations/>}/>\n                </Content>\n                <FooterSection/>\n            </Layout>\n        </BrowserRouter>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport dynamicDataReducer from \"./reducers/dynamicDataReducer\";\nimport uploadGSReducer from './reducers/uploadGSReducer'\nimport uploadCreativesReducer from \"./reducers/uploadCreativesReducer\";\nimport createAllVariationsReducer from \"./reducers/createAllVariationsReducer\";\nimport thunk from 'redux-thunk';\n\nconst reducers = combineReducers({\n    dynamicData: dynamicDataReducer,\n    uploadGS: uploadGSReducer,\n    uploadCreatives: uploadCreativesReducer,\n    createAllVariations: createAllVariationsReducer\n})\nconst store = createStore(reducers, applyMiddleware(thunk))\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\nimport {Provider} from 'react-redux'\n\nwindow.store = store\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Progress_title__3fLUr\",\"icon\":\"Progress_icon__23tgs\",\"selected\":\"Progress_selected__cDMzC\",\"disabled\":\"Progress_disabled__3LbJr\"};"],"sourceRoot":""}